{"name": "test_buy_book_4", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=113.0.5672.64)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00468893+48451]\n\t(No symbol) [0x003FB8A1]\n\t(No symbol) [0x00305058]\n\t(No symbol) [0x002ED073]\n\t(No symbol) [0x0034DEBB]\n\t(No symbol) [0x0035BFD3]\n\t(No symbol) [0x0034A0B6]\n\t(No symbol) [0x00327E08]\n\t(No symbol) [0x00328F2D]\n\tGetHandleVerifier [0x006C8E3A+2540266]\n\tGetHandleVerifier [0x00708959+2801161]\n\tGetHandleVerifier [0x0070295C+2776588]\n\tGetHandleVerifier [0x004F2280+612144]\n\t(No symbol) [0x00404F6C]\n\t(No symbol) [0x004011D8]\n\t(No symbol) [0x004012BB]\n\t(No symbol) [0x003F4857]\n\tBaseThreadInitThunk [0x760000C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77857B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77857B1E+238]", "trace": "set_up = None\n\n    @pytest.mark.run(order=3)\n    def test_buy_book_4(set_up):\n    \n        \"\"\"Critical path test: authorization, authorization confirmation, finding book in the catalogue, adding book to Cart, making the payment\"\"\"\n    \n        options = webdriver.ChromeOptions()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option(\"detach\", True)\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        g = Service()\n        driver = webdriver.Chrome(options=options, service=g)\n    \n        \"\"\"Authorization and receiving confirmation of authorization\"\"\"\n        login = Login_page(driver)\n>       login.authorization()\n\ntest_buy_book.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:130: in authorization\n    self.driver.maximize_window()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:592: in maximize_window\n    self.execute(command, None)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EE8892E010>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77857B4E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77857B1E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=113.0.5672.64)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00468893+48451]\nE       \t(No symbol) [0x003FB8A1]\nE       \t(No symbol) [0x00305058]\nE       \t(No symbol) [0x002ED073]\nE       \t(No symbol) [0x0034DEBB]\nE       \t(No symbol) [0x0035BFD3]\nE       \t(No symbol) [0x0034A0B6]\nE       \t(No symbol) [0x00327E08]\nE       \t(No symbol) [0x00328F2D]\nE       \tGetHandleVerifier [0x006C8E3A+2540266]\nE       \tGetHandleVerifier [0x00708959+2801161]\nE       \tGetHandleVerifier [0x0070295C+2776588]\nE       \tGetHandleVerifier [0x004F2280+612144]\nE       \t(No symbol) [0x00404F6C]\nE       \t(No symbol) [0x004011D8]\nE       \t(No symbol) [0x004012BB]\nE       \t(No symbol) [0x003F4857]\nE       \tBaseThreadInitThunk [0x760000C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77857B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77857B1E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchWindowException"}, "description": "Critical path test: authorization, authorization confirmation, finding book in the catalogue, adding book to Cart, making the payment", "steps": [{"name": "Product confirmation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=113.0.5672.64)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00468893+48451]\n\t(No symbol) [0x003FB8A1]\n\t(No symbol) [0x00305058]\n\t(No symbol) [0x002ED073]\n\t(No symbol) [0x0034DEBB]\n\t(No symbol) [0x0035BFD3]\n\t(No symbol) [0x0034A0B6]\n\t(No symbol) [0x00327E08]\n\t(No symbol) [0x00328F2D]\n\tGetHandleVerifier [0x006C8E3A+2540266]\n\tGetHandleVerifier [0x00708959+2801161]\n\tGetHandleVerifier [0x0070295C+2776588]\n\tGetHandleVerifier [0x004F2280+612144]\n\t(No symbol) [0x00404F6C]\n\t(No symbol) [0x004011D8]\n\t(No symbol) [0x004012BB]\n\t(No symbol) [0x003F4857]\n\tBaseThreadInitThunk [0x760000C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77857B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77857B1E+238]\n\n", "trace": "  File \"C:\\Users\\ASUS\\PycharmProjects\\digital_bookstore_project\\pages\\login_page.py\", line 130, in authorization\n    self.driver.maximize_window()\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 592, in maximize_window\n    self.execute(command, None)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\ASUS\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1683577064918, "stop": 1683577065991}], "attachments": [{"name": "stdout", "source": "b148150b-afd5-4eb0-bef5-85ec602936fa-attachment.txt", "type": "text/plain"}], "start": 1683577063339, "stop": 1683577065995, "uuid": "320370fb-28a7-4617-82a7-9b98acd9c126", "historyId": "b7ae3ccbbca5fc21b0ebb0099d0bc4b9", "testCaseId": "b7ae3ccbbca5fc21b0ebb0099d0bc4b9", "fullName": "test_buy_book#test_buy_book_4", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "suite", "value": "test_buy_book"}, {"name": "host", "value": "DESKTOP-IJ9CPF6"}, {"name": "thread", "value": "18988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_buy_book"}]}